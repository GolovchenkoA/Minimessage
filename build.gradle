import com.sun.org.apache.xalan.internal.xsltc.cmdline.Compile

//Root project configuration

plugins {
	// description Web Application Deployments With Gradle - Benjamin Muschko
	// https://codehaus-cargo.github.io/cargo/Home.html
	//https://github.com/bmuschko/gradle-cargo-plugin/blob/master/README.md
	id "com.bmuschko.cargo" version "2.2.3"
	id "com.bmuschko.tomcat" version "2.2.5"
}

apply plugin: 'idea'

description = 'minimessage. Application like Twitter'

ext{
	gradleVersion = '3.4.1'
	javaVersion = '1.8.0_73'
	projectIds = ['group': 'ua.golovchenko.artem.minimessage', 'version': '1.0.0.SNAPSHOT']
	MySQLVersion = '6.0.6'
}
version = projectIds.version


allprojects{

	group = projectIds.group

	repositories {
		mavenCentral()
	}

	gradle.projectsEvaluated {
		tasks.withType(Compile) {
			options.compilerArgs << "-Xlint:unchecked"
		}
	}
}


subprojects{

	apply plugin: 'java'
	apply plugin: "jacoco"

	sourceCompatibility = 1.8
	targetCompatibility = '1.8'

	ext{
		junitVersion = '4.12'
		mockitoVersion = '1.10.19'
		springVersion = '3.0.5.RELEASE'
		jacocoVersion = '0.7.9'
	}


	sourceSets {
		test {
			resources {
				srcDirs = ['src/test/resources', 'src/test/java']
			}
		}
	}

	repositories {
		mavenCentral()
		jcenter()
	}

	dependencies {
		compile 'javax.inject:javax.inject:1'
		testCompile "junit:junit:$junitVersion"
		testCompile "org.mockito:mockito-all:$mockitoVersion"
		testCompile "org.springframework:spring-test:$springVersion"
	}


	jacoco {
		toolVersion = "${jacocoVersion}"
		//reportsDir = file("$buildDir/customJacocoReportDir")
	}

	build.dependsOn(jacocoTestReport)
	//test.finalizedBy(jacocoTestReport)
}


project('minimessage-model'){
	version = '1.0.0.SNAPSHOT'
	description = 'Domain models'

dependencies{
	compile "javax.persistence:persistence-api:1.0"
	compile "javax.validation:validation-api:1.0.0.GA"
}

}

project('minimessage-dao'){
	version = '1.0.0.SNAPSHOT'
	description = 'Databases access object classes'

	dependencies {
		compile project(':minimessage-model')
		compile "org.springframework:spring-jdbc:$springVersion"
		compile group: 'mysql', name: 'mysql-connector-java', version: "$MySQLVersion"
		compile group: 'org.springframework', name: 'spring-orm', version: "$springVersion"
		compile "org.hibernate:hibernate-core:3.3.2.GA"
		compile "org.hibernate:hibernate-annotations:3.4.0.GA"
		compile "org.slf4j:slf4j-api:1.6.1"
		compile "javassist:javassist:3.9.0.GA"
	}
}

project('minimessage-service'){
	version = '1.0.0.SNAPSHOT'
	description = 'Services'
}

project('minimessage-web') {
	apply plugin: "jetty"
	apply plugin: 'project-report'
	apply plugin: 'com.bmuschko.tomcat'
	apply plugin: 'com.bmuschko.cargo'


	version = '1.0.0.SNAPSHOT'
	description = 'Web'
	
	apply plugin: 'war'
	dependencies {
		compile project(':minimessage-model')
		compile project(':minimessage-dao')
		compile "org.springframework:spring-webmvc:$springVersion"
		// https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
		compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'

		ext.cargoVersion = '1.6.2'
		cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
				"org.codehaus.cargo:cargo-ant:$cargoVersion"

	}

	cargo{
		containerId = 'tomcat9x'
		port = 8080

		remote{
			hostname = 'localhost'
			username = 'admin'
			password = 'admin'
		}
	}

}


task wrapper(type: Wrapper) {
	gradleVersion = '3.4.1'
}
