<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
        xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.0.xsd">

      <!--Settings description https://docs.spring.io/spring-security/site/docs/3.0.x/reference/ns-config.html            -->


    <http auto-config="true" use-expressions="true">

        <!--Login with Form  -->
        <!--Description settings (for v3.2.0) https://spring.io/blog/2013/07/03/spring-security-java-config-preview-web-security/ -->
        <form-login
                default-target-url="/welcome"
                always-use-default-target='true'/>
        <logout logout-success-url="/home"  />

<!--
        <form-login
                login-page="/login"
                login-processing-url="/static/j_spring_security_check"
                authentication-failure-url="/login"
                default-target-url="/welcome"
                always-use-default-target='false'/>
        <logout logout-success-url="/home"  />

-->

        <!--<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />-->

<!--        <intercept-url pattern="resources/css/**" filters="none"/> &lt;!&ndash;Exclude filter by mask  &ndash;&gt;
        <intercept-url pattern="resources/images/**" filters="none"/> &lt;!&ndash;Exclude filter by mask  &ndash;&gt;
        -->
        <intercept-url pattern="/resources/css/**" access="permitAll"/> <!--Exclude filter by mask  -->
        <intercept-url pattern="/resources/images/**" access="permitAll"/> <!--Exclude filter by mask  -->


        <intercept-url pattern="/accounts/create_new_account" access="permitAll" />
        <intercept-url pattern="/home" filters="none"/> <!--Exclude filter by mask  -->
        <intercept-url pattern="/" filters="none"/> <!--Exclude filter by mask  -->
        <!--<intercept-url pattern="/accounts?new" filters="none"/>--> <!--Exclude filter by mask  -->
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/> <!--Intercept all urls and check users must have ROLE_ACCOUNT-->
        <intercept-url pattern="/**" access="hasRole('ROLE_USER')"/> <!--Intercept all urls and check users must have ROLE_ACCOUNT-->


        <!-- access denied page -->
        <access-denied-handler error-page="/403" />

        <!-- enable csrf protection -->
        <!--<csrf/>-->
    </http>

    <!--Build-in In-Memory Authentication (Simple without databases)  -->

    <!--In future add authentification  from database.
    http://www.mkyong.com/spring-security/spring-security-form-login-using-database
    or off.site (2.2.3 Using other Authentication Providers)
    https://docs.spring.io/spring-security/site/docs/3.0.x/reference/ns-config.html
    /-->

<!--    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <user-service>
                <user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />
                <user name="user" password="user" authorities="ROLE_USER" />
            </user-service>
            <user-service id="usersFromFile" properties="accounts.properties"/>&lt;!&ndash; Authentificationn from file. Doesn't work because it second user-service &ndash;&gt;
        </authentication-provider>
    </authentication-manager>-->

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                  users-by-username-query="
                      select username,password,case enabled when 1 then 'true' else 'false' end 'enabled'
                      from USER_ACCOUNTS WHERE username=?"

                  authorities-by-username-query="
                    select account.username,roles.name
                    from USER_ACCOUNTS account inner join ACCOUNTS_AND_ROLES role
                    on account.id = role.account_id
                    inner join ACCOUNTS_ROLES roles
                    on role.role_id = roles.id
                    where account.username = ?"/>

        </authentication-provider>
    </authentication-manager>


    <!--Enable Spring security annotation(@Secured) for methods   -->
    <global-method-security secured-annotations="enabled" />




</beans:beans>
<!--
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.0.xsd">
       &lt;!&ndash; Здесь располагаются элементы без префикса security: &ndash;&gt;
</beans:beans>-->
